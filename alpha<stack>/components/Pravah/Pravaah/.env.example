# Application Settings
# --------------------
# Set the log level for the application. Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Host and port for the FastAPI application.
APP_HOST=0.0.0.0
APP_PORT=8000

# Comma-separated list of allowed origins for CORS (e.g., http://localhost:3000,https://my-frontend.com)
# Use "*" for all origins during development, but be specific in production.
CORS_ORIGINS=*

# Database Configuration (PostgreSQL)
# -----------------------------------
# Full PostgreSQL connection string (e.g., postgresql://user:password@host:port/database)
# For Docker Compose, 'db' might be the service name for the PostgreSQL container.
DATABASE_URL=postgresql://pravah_user:pravah_password@localhost:5432/pravah_db

# Alternatively, you can specify database components individually:
# DB_USER=pravah_user
# DB_PASSWORD=pravah_password
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=pravah_db

# Authentication Settings
# -----------------------
# Secret key for JWT token signing.
# GENERATE A STRONG, RANDOM KEY FOR PRODUCTION (e.g., using 'openssl rand -hex 32')
JWT_SECRET_KEY=supersecretdevkey_please_change_this_for_production

# Algorithm for JWT token encryption (e.g., HS256, RS256)
JWT_ALGORITHM=HS256

# Access token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Storage Configuration (S3/MinIO or Local Filesystem)
# ----------------------------------------------------
# Type of storage to use: 's3' or 'filesystem'
STORAGE_TYPE=filesystem

# --- S3/MinIO Configuration (Uncomment and configure if STORAGE_TYPE is 's3') ---
# AWS Access Key ID
# AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID

# AWS Secret Access Key
# AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY

# S3 Bucket Name
# S3_BUCKET_NAME=pravah-data-bucket

# S3 Region Name (e.g., us-east-1)
# S3_REGION_NAME=us-east-1

# Optional: Endpoint URL for MinIO or other S3-compatible storage
# For MinIO running via docker-compose: http://minio:9000
# S3_ENDPOINT_URL=

# Optional: Use SSL for S3 connection (true/false)
# S3_USE_SSL=true

# --- Local Filesystem Configuration (Uncomment and configure if STORAGE_TYPE is 'filesystem') ---
# Base path for local file storage and processing relative to the container's working directory
FILE_STORAGE_PATH=./data

# Uvicorn Worker Settings (for local development and production deployments)
# --------------------------------------------------------------------------
# Number of Uvicorn workers to run (typically 1-2x CPU cores for optimal performance).
# This is usually configured via the 'gunicorn' command when using gunicorn+uvicorn.
# WORKER_COUNT=1

# Enable/disable auto-reloading for development (True/False).
# Setting this to 'True' is useful during development, but should be 'False' in production.
# UVICORN_RELOAD=True