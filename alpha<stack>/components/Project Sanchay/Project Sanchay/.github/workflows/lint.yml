name: Lint & Format Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-format:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip' # Cache pip dependencies for faster installation

    - name: Install Python linting dependencies
      run: |
        python -m pip install --upgrade pip
        # Pin versions for consistency across environments
        pip install black==23.1.0 isort==5.12.0

    - name: Check Python code with Black
      run: black --check .

    - name: Check Python imports with Isort
      run: isort --check-only .

    - name: Install Rust toolchain and components
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable # Aligns with v1.65+ stable recommendation
        components: rustfmt, clippy

    - name: Check Rust code with Rustfmt
      # --check ensures that formatting is checked, but not applied
      run: cargo fmt --check
      working-directory: crates/sanchay_core

    - name: Run Clippy linter
      # -D warnings treats all warnings as errors, enforcing strict code quality
      # --all-targets includes all build targets (lib, bin, tests, examples)
      # --all-features enables all features defined in Cargo.toml
      run: cargo clippy --all-targets --all-features -- -D warnings
      working-directory: crates/sanchay_core