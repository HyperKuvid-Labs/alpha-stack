apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Reference the common base resources for all environments.
# The path is relative to this kustomization.yaml file.
bases:
  - ../../base

# Apply a suffix to the names of all resources managed by this overlay.
# This helps distinguish resources in different environments (e.g., 'karyaksham-api-staging').
nameSuffix: -staging

# Define the target Kubernetes namespace for the staging environment.
# All resources generated by this kustomization will be deployed into this namespace.
namespace: karyaksham-staging

# Update container image names and tags for the staging deployment.
# The 'name' field must match the image name specified in the base deployment YAML (e.g., in deployment-api.yaml).
# 'newName' specifies the full image path in your container registry.
# 'newTag' specifies the desired image tag for the staging environment, typically a build ID or a specific branch tag.
images:
  - name: karyaksham-api # Matches the image name defined in base/deployment-api.yaml
    newName: your-docker-registry/karyaksham-api # Replace with your actual Docker registry path
    newTag: latest-staging # Example tag: e.g., a build ID or 'main-latest'
  - name: karyaksham-worker # Matches the image name defined in base/deployment-worker.yaml
    newName: your-docker-registry/karyaksham-worker # Replace with your actual Docker registry path
    newTag: latest-staging # Example tag

# Apply strategic merge patches specific to the staging environment.
# These patch files must exist in the same directory as this kustomization.yaml.
# They will modify or override fields in the resources inherited from the base.
patchesStrategicMerge:
  - replica-count-patch.yaml # This patch adjusts the number of replicas for deployments.
  - configmap-patch.yaml # This patch overrides environment-specific variables in the application ConfigMap.